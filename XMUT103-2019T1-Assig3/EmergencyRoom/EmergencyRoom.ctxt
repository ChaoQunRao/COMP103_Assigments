#BlueJ class context
comment0.target=EmergencyRoom
comment0.text=\r\n\ Simulation\ of\ an\ EmergencyRoom,\r\n\ The\ Emergency\ room\ has\ a\ collection\ of\ departments\ for\ treating\ patients\ (ER\ beds,\ X-ray,\r\n\ \ Operating\ Theatre,\ MRI,\ Ultrasound,\ etc).\r\n\ \r\n\ When\ patients\ arrive\ at\ the\ emergency\ room,\ they\ are\ immediately\ assessed\ by\ the\r\n\ \ triage\ team\ who\ determine\ the\ priority\ of\ the\ patient\ and\ a\ sequence\ of\ treatments\r\n\ \ that\ the\ patient\ will\ need.\r\n\r\n\ Each\ department\ has\r\n\ \ -\ a\ Set\ of\ patients\ that\ they\ are\ currently\ treating,\r\n\ \ \ \ (There\ is\ a\ maximum\ size\ of\ this\ set\ for\ each\ department)\r\n\ \ -\ a\ Queue\ for\ the\ patients\ waiting\ for\ that\ department.\r\n\r\n\ The\ departments\ should\ be\ in\ a\ Map,\ with\ the\ department\ name\ (\=\ treatment\ type)\ as\ the\ key.\r\n\ \r\n\ When\ a\ patient\ has\ finished\ a\ treatment,\ they\ should\ be\ moved\ to\ the\r\n\ \ \ department\ for\ the\ next\ treatment\ they\ require.\r\n\r\n\ When\ a\ patient\ has\ finished\ all\ their\ treatments,\ they\ should\ be\ discharged\:\r\n\ \ -\ a\ record\ of\ their\ total\ time,\ treatment\ time,\ and\ wait\ time\ should\ be\ printed,\r\n\ \ -\ the\ details\ should\ be\ added\ to\ the\ statistics.\ \r\n\r\n\r\n\ The\ main\ simulation\ should\ consist\ of\r\n\ a\ setting\ up\ phase\ which\ initialises\ all\ the\ queues,\r\n\ a\ loop\ that\ steps\ through\ time\:\r\n\ \ \ -\ advances\ the\ time\ by\ one\ "tick"\r\n\ \ \ -\ Processes\ one\ time\ tick\ for\ each\ patient\ currently\ in\ each\ department\r\n\ \ \ \ \ (either\ making\ them\ wait\ if\ they\ are\ on\ the\ queue,\ or\r\n\ \ \ \ \ \ advancing\ their\ treatment\ if\ they\ are\ being\ treated)\r\n\ \ \ -\ Checks\ for\ any\ patients\ who\ have\ completed\ their\ current\ treatment,\r\n\ \ \ \ \ \ and\ remove\ from\ the\ department\r\n\ \ \ -\ Move\ all\ Patients\ that\ completed\ a\ treatment\ to\ their\ next\ department\ (or\ discharge\ them)\r\n\ \ \ -\ Checks\ each\ department,\ and\ moves\ patients\ from\ the\ front\ of\ the\r\n\ \ \ \ \ \ \ waiting\ queues\ into\ the\ Sets\ of\ patients\ being\ treated,\ if\ there\ is\ room\r\n\ \ \ -\ Gets\ any\ new\ patient\ that\ has\ arrived\ (depends\ on\ arrivalInterval)\ and\r\n\ \ \ \ \ \ \ puts\ them\ on\ the\ appropriate\ queue\r\n\ \ \ -\ Redraws\ all\ the\ departments\ -\ showing\ the\ patients\ being\ treated,\ and\r\n\ \ \ \ \ the\ patients\ waiting\ in\ the\ queues\r\n\ \ \ -\ Pauses\ briefly\r\n\r\n\ The\ simple\ simulation\ just\ has\ one\ department\ -\ ER\ beds\ that\ can\ treat\ 5\ people\ at\ once.\r\n\ Patients\ arrive\ and\ need\ treatment\ for\ random\ times.\r\n
comment1.params=
comment1.target=EmergencyRoom()
comment1.text=\r\n\ Construct\ a\ new\ EmergencyRoom\ object,\ setting\ up\ the\ GUI\r\n
comment10.params=
comment10.target=void\ reset()
comment10.text=\r\n\ Define\ the\ departments\ available\ and\ put\ them\ in\ the\ map\ of\ departments.\r\n\ Each\ department\ needs\ to\ have\ a\ name\ and\ a\ maximum\ number\ of\ patients\ that\r\n\ it\ can\ be\ treating\ at\ the\ same\ time.\r\n\ Simple\ version\:\ just\ a\ collection\ of\ 5\ ER\ beds.\r\n
comment11.params=
comment11.target=void\ report()
comment12.params=
comment12.target=void\ run()
comment12.text=\r\n\ Main\ loop\ of\ the\ simulation\r\n
comment13.params=
comment13.target=void\ drawGraph()
comment14.params=
comment14.target=void\ drawP()
comment15.params=
comment15.target=void\ drawP2()
comment16.params=
comment16.target=void\ drawBed()
comment17.params=
comment17.target=void\ drawBase()
comment18.params=
comment18.target=void\ drawWaitingPerson()
comment19.params=
comment19.target=void\ drawAverageOfCurrentPatient_Time()
comment2.params=name\ controller
comment2.target=javax.swing.JButton\ addButton(java.lang.String,\ ecs100.UIButtonListener)
comment20.params=
comment20.target=void\ drawAverageOfAllPatient_Time()
comment21.params=
comment21.target=void\ drawP3()
comment22.params=p
comment22.target=void\ discharge(Patient)
comment22.text=\r\n\ Report\ that\ a\ patient\ has\ been\ discharged,\ along\ with\ any\r\n\ useful\ statistics\ about\ the\ patient\r\n
comment23.params=
comment23.target=void\ reportStatistics()
comment23.text=\r\n\ Report\ summary\ statistics\ about\ the\ simulation\r\n
comment24.params=
comment24.target=void\ redraw()
comment24.text=\r\n\ Redraws\ all\ the\ departments\r\n
comment25.params=
comment25.target=int\ randomPriority()
comment25.text=\ \ (COMPLETION)\r\n\ Returns\ a\ random\ priority\ 1\ -\ 3\r\n\ Probability\ of\ a\ priority\ 1\ patient\ should\ be\ probPri1\r\n\ Probability\ of\ a\ priority\ 2\ patient\ should\ be\ probPri2\r\n\ Probability\ of\ a\ priority\ 3\ patient\ should\ be\ (1-probPri1-probPri2)\r\n
comment26.params=arguments
comment26.target=void\ main(java.lang.String[])
comment3.params=name\ controller
comment3.target=javax.swing.JButton\ addReportButton(java.lang.String,\ ecs100.UIButtonListener)
comment4.params=
comment4.target=void\ setupGUI()
comment5.params=
comment5.target=void\ setButton()
comment6.params=e
comment6.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment7.params=e
comment7.target=void\ mouseExited(java.awt.event.MouseEvent)
comment8.params=e
comment8.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment9.params=e
comment9.target=void\ mouseExited(java.awt.event.MouseEvent)
numComments=27
